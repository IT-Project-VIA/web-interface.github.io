{"version":3,"sources":["ProductTableRow.js","data/products.js","api/ProductAPI.js","App.js","serviceWorker.js","index.js"],"names":["ProductTableRow","product","updateProduct","deleteProduct","handleChange","event","target","name","value","TableRow","TableCell","align","TextField","variant","size","onChange","type","price","specialPrice","Select","targetGender","MenuItem","targetAge","Button","onClick","Delete","products","id","actualProducts","undefined","ProductAPI","newProducts","useStyles","makeStyles","theme","box","background","height","width","grid","saveButton","position","bottom","spacing","right","addButton","tableContainer","maxHeight","App","classes","useState","setProducts","products_copy","prodIdx","findIndex","p","filter","Box","className","Fab","color","uuidv4","Add","Save","TableContainer","component","Paper","Table","stickyHeader","TableHead","tableHead","TableBody","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f32645e8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  TableCell,\n  TableRow,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\n\nexport const ProductTableRow = ({ product, updateProduct, deleteProduct }) => {\n  const handleChange = (event) => {\n    updateProduct({ ...product, [event.target.name]: event.target.value });\n  };\n\n  const handleDeleteButton = () => {\n    deleteProduct(product);\n  };\n\n  return (\n    <TableRow>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"name\"\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.name ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"price\"\n          variant=\"outlined\"\n          type={\"number\"}\n          onChange={handleChange}\n          size={\"small\"}\n          value={product.price ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"specialPrice\"\n          type={\"number\"}\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.specialPrice ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"targetGender\"}\n          value={product.targetGender ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={\"male\"}>Male</MenuItem>\n          <MenuItem value={\"female\"}>Female</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"targetAge\"}\n          value={product.targetAge ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={17}>17</MenuItem>\n          <MenuItem value={28}>28</MenuItem>\n          <MenuItem value={40}>40</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={80}>80</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell>\n        <Button onClick={handleDeleteButton}>\n          <Delete />\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n","export let products = [\n  {\n    id: 1,\n    name: \"Rug\",\n    price: 29.99,\n    specialPrice: 24.99,\n    targetGender: \"female\",\n    targetAge: 40,\n  },\n  {\n    id: 2,\n    name: \"Cucumber\",\n    price: 1.5,\n    specialPrice: 0.6,\n    targetGender: \"female\",\n  },\n  {\n    id: 3,\n    name: \"Cactus\",\n    price: 300.0,\n    specialPrice: 9.99,\n    targetGender: \"female\",\n    targetAge: 17,\n  },\n  {\n    id: 4,\n    name: \"Bread\",\n    price: 2.0,\n    specialPrice: 1.29,\n  },\n];\n","import { products } from \"../data/products\";\n\nlet actualProducts = undefined;\n\nexport const ProductAPI = {\n  getProducts: () => actualProducts ?? [...products],\n  putProducts: (newProducts) => {\n    actualProducts = newProducts;\n  },\n};\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Paper,\n  TableCell,\n  Fab,\n} from \"@material-ui/core\";\nimport { Save, Add } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ProductTableRow } from \"./ProductTableRow\";\nimport { ProductAPI } from \"./api/ProductAPI\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    background: \"#00000022\",\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n  grid: {\n    background: \"#00000022\",\n  },\n  saveButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n\n  addButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(2) + 64,\n    right: theme.spacing(2),\n  },\n  tableContainer: {\n    maxHeight: \"100%\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [products, setProducts] = useState(ProductAPI.getProducts());\n\n  const updateProduct = (product) => {\n    const products_copy = [...products];\n    const prodIdx = products_copy.findIndex((p) => p.id === product.id);\n    products_copy[prodIdx] = product;\n    setProducts(products_copy);\n  };\n\n  const handleSaveButton = () => {\n    ProductAPI.putProducts(products);\n  };\n\n  const handleAddButton = () => {\n    setProducts([...products, { id: uuidv4() }]);\n  };\n\n  const deleteProduct = (product) => {\n    setProducts(products.filter((p) => p.id !== product.id));\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Fab\n        className={classes.addButton}\n        color={\"primary\"}\n        onClick={handleAddButton}\n      >\n        <Add />\n      </Fab>\n      <Fab\n        className={classes.saveButton}\n        color={\"primary\"}\n        onClick={handleSaveButton}\n      >\n        <Save />\n      </Fab>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table stickyHeader>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell align=\"left\">Product</TableCell>\n              <TableCell align=\"left\">Price</TableCell>\n              <TableCell align=\"left\">Special Price</TableCell>\n              <TableCell align=\"left\">Target Gender</TableCell>\n              <TableCell align=\"left\">Target Age</TableCell>\n              <TableCell align=\"left\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map((product) => (\n              <ProductTableRow\n                key={product.id}\n                product={product}\n                updateProduct={updateProduct}\n                deleteProduct={deleteProduct}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}