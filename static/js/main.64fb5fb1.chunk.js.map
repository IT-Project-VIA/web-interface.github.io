{"version":3,"sources":["api/ProductAPI.js","components/ProductTableRow.js","components/ProductTable.js","components/App.js","serviceWorker.js","index.js"],"names":["ProductAPI","getProducts","fetch","then","res","json","putProducts","products","fetchOptions","headers","method","body","JSON","stringify","ok","deleteProduct","id","a","response","ProductTableRow","product","setProducts","previousState","filter","p","handleChange","event","products_copy","prodIdx","findIndex","updateProduct","target","name","value","handleDeleteButton","TableRow","TableCell","align","TextField","variant","size","onChange","type","price","newPrice","Select","sex","MenuItem","age","Button","onClick","Delete","useStyles","makeStyles","tableContainer","maxHeight","ProductTable","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","shownProducts","slice","TableContainer","component","Paper","className","Table","stickyHeader","TableHead","tableHead","TableBody","map","key","TableFooter","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","parseInt","theme","box","background","height","width","grid","saveButton","position","bottom","spacing","right","addButton","App","successIsOpen","successSetOpen","failIsOpen","failSetOpen","useEffect","Box","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","Fab","color","uuidv4","Add","Save","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gUAAaA,EAAa,CACxBC,YAAa,kBACXC,MACE,4DACAC,MAAK,SAACC,GAAD,OAASA,EAAIC,WACtBC,YAAa,SAACC,GACZ,IAAMC,EAAe,CACnBC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEN,SAAUA,KAEnC,OAAOL,MACL,2DACAM,GACAL,MAAK,SAACC,GAAD,OAASA,EAAIU,OAEtBC,cAAc,WAAD,4BAAE,WAAOC,GAAP,eAAAC,EAAA,sEACUf,MACrB,4DAA8Dc,EAC9D,CAAEN,OAAQ,WAHC,cACPQ,EADO,yBAKNA,EAASJ,IALH,2CAAF,mDAAC,I,uJCNHK,EAAkB,SAAC,GAA8B,IAAD,UAA3BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAUnCN,EAAa,uCAAG,WAAOK,GAAP,SAAAH,EAAA,sEACVjB,EAAWe,cAAcK,EAAQJ,IADvB,kCAElBK,GAAY,SAACC,GAAD,OACVA,EAAcC,QAAO,SAACC,GAAD,OAAOA,EAAER,KAAOI,EAAQJ,SAH7B,2CAAH,sDAQbS,EAAe,SAACC,IAjBA,SAACN,GACrBC,GAAY,SAACC,GACX,IAAMK,EAAa,YAAOL,GACpBM,EAAUD,EAAcE,WAAU,SAACL,GAAD,OAAOA,EAAER,KAAOI,EAAQJ,MAEhE,OADAW,EAAcC,GAAWR,EAClBO,KAaTG,CAAc,eAAKV,EAAN,eAAgBM,EAAMK,OAAOC,KAAON,EAAMK,OAAOE,UAG1DC,EAAkB,uCAAG,sBAAAjB,EAAA,sEACnBF,EAAcK,GADK,2CAAH,qDAIxB,OACE,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,QACf,kBAACC,EAAA,EAAD,CACEN,KAAK,OACLO,QAAQ,WACRC,KAAM,QACNC,SAAUhB,EACVQ,MAAK,UAAEb,EAAQY,YAAV,QAAkB,MAG3B,kBAACI,EAAA,EAAD,CAAWC,MAAM,QACf,kBAACC,EAAA,EAAD,CACEN,KAAK,QACLO,QAAQ,WACRG,KAAM,SACND,SAAUhB,EACVe,KAAM,QACNP,MAAK,UAAEb,EAAQuB,aAAV,QAAmB,MAG5B,kBAACP,EAAA,EAAD,CAAWC,MAAM,QACf,kBAACC,EAAA,EAAD,CACEN,KAAK,WACLU,KAAM,SACNH,QAAQ,WACRC,KAAM,QACNC,SAAUhB,EACVQ,MAAK,UAAEb,EAAQwB,gBAAV,QAAsB,MAG/B,kBAACR,EAAA,EAAD,CAAWC,MAAM,QACf,kBAACQ,EAAA,EAAD,CACEb,KAAM,MACNC,MAAK,UAAEb,EAAQ0B,WAAV,QAAiB,OACtBP,QAAS,WACTE,SAAUhB,GAEV,kBAACsB,EAAA,EAAD,CAAUd,MAAO,QAAjB,QACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,KAAjB,QACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,KAAjB,YAGJ,kBAACG,EAAA,EAAD,CAAWC,MAAM,QACf,kBAACQ,EAAA,EAAD,CACEb,KAAM,MACNC,MAAK,UAAEb,EAAQ4B,WAAV,QAAiB,OACtBT,QAAS,WACTE,SAAUhB,GAEV,kBAACsB,EAAA,EAAD,CAAUd,MAAO,QAAjB,QACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,GAAjB,KACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,GAAjB,KACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,MACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,MACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,MACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,MACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,MACA,kBAACc,EAAA,EAAD,CAAUd,MAAO,IAAjB,QAGJ,kBAACG,EAAA,EAAD,KACE,kBAACa,EAAA,EAAD,CAAQC,QAAShB,GACf,kBAACiB,EAAA,EAAD,UCtFJC,EAAYC,aAAW,iBAAO,CAClCC,eAAgB,CACdC,UAAW,YAIFC,EAAe,SAAC,GAA+B,IAA7BnC,EAA4B,EAA5BA,YAAad,EAAe,EAAfA,SACpCkD,EAAUL,IADyC,EAGjCM,IAAMC,SAAS,GAHkB,mBAGlDC,EAHkD,KAG5CC,EAH4C,OAInBH,IAAMC,SAAS,GAJI,mBAIlDG,EAJkD,KAIrCC,EAJqC,KAMnDC,EAAgBzD,EAAS0D,MAC7BL,EAAOE,EACPF,EAAOE,EAAcA,GAYvB,OACE,kBAACI,EAAA,EAAD,CAAgBC,UAAWC,IAAOC,UAAWZ,EAAQH,gBACnD,kBAACgB,EAAA,EAAD,CAAOC,cAAY,GACjB,kBAACC,EAAA,EAAD,CAAWH,UAAWZ,EAAQgB,WAC5B,kBAACtC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,WACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,WAGrB,kBAACqC,EAAA,EAAD,KACGV,EAAcW,KAAI,SAACvD,GAAD,OACjB,kBAAC,EAAD,CACEwD,IAAKxD,EAAQJ,GACbI,QAASA,EACTC,YAAaA,QAInB,kBAACwD,EAAA,EAAD,KACE,kBAAC1C,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,MAAOzE,EAAS0E,OAChBnB,YAAaA,EACbF,KAAMA,EACNsB,aAtCa,SAACxD,EAAOyD,GAC/BtB,EAAQsB,IAsCEC,oBAnCoB,SAAC1D,GAC/BqC,EAAesB,SAAS3D,EAAMK,OAAOE,MAAO,KAC5C4B,EAAQ,W,SC7BNT,EAAYC,aAAW,SAACiC,GAAD,MAAY,CACvCC,IAAK,CACHC,WAAY,YACZC,OAAQ,QACRC,MAAO,SAETC,KAAM,CACJH,WAAY,aAEdI,WAAY,CACVC,SAAU,QACVC,OAAQR,EAAMS,QAAQ,GACtBC,MAAOV,EAAMS,QAAQ,IAGvBE,UAAW,CACTJ,SAAU,QACVC,OAAQR,EAAMS,QAAQ,GAAK,GAC3BC,MAAOV,EAAMS,QAAQ,QAIZG,EAAM,WACjB,IAAMzC,EAAUL,IADO,EAGSO,mBAAS,IAHlB,mBAGhBpD,EAHgB,KAGNc,EAHM,OAIiBsC,oBAAS,GAJ1B,mBAIhBwC,EAJgB,KAIDC,EAJC,OAKWzC,oBAAS,GALpB,mBAKhB0C,EALgB,KAKJC,EALI,KAOvBC,qBAAU,WACRvG,EAAWC,cAAcE,MAAK,SAACC,GAAD,OAASiB,EAAYjB,QAClD,CAACiB,IAaJ,OACE,kBAACmF,EAAA,EAAD,CAAKnC,UAAWZ,EAAQ8B,KACtB,kBAAC,EAAD,CAAchF,SAAUA,EAAUc,YAAaA,IAC/C,kBAACoF,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMV,EACNW,iBAAkB,IAClBC,QAAS,kBAAMX,GAAe,KAE9B,kBAACY,EAAA,EAAD,CAAOD,QAAS,kBAAMX,GAAe,IAAQa,SAAS,WAAtD,wBAIF,kBAACR,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMR,EACNS,iBAAkB,IAClBC,QAAS,kBAAMT,GAAY,KAE3B,kBAACU,EAAA,EAAD,CAAOD,QAAS,kBAAMT,GAAY,IAAQW,SAAS,SAAnD,mBAIF,kBAACC,EAAA,EAAD,CACE7C,UAAWZ,EAAQwC,UACnBkB,MAAO,UACPjE,QApCkB,WACtB7B,EAAY,GAAD,mBAAKd,GAAL,CAAe,CAAES,GAAIoG,oBAqC5B,kBAACC,EAAA,EAAD,OAEF,kBAACH,EAAA,EAAD,CACE7C,UAAWZ,EAAQmC,WACnBuB,MAAO,UACPjE,QAlDmB,WACvBlD,EAAWM,YAAYC,GAAUJ,MAAK,SAACW,GACjCA,EAAIsF,GAAe,GAClBE,GAAY,QAiDf,kBAACgB,EAAA,EAAD,SClFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/H,MAAK,SAAAgI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.64fb5fb1.chunk.js","sourcesContent":["export const ProductAPI = {\n  getProducts: () =>\n    fetch(\n      \"https://via-fr-database-connector.herokuapp.com/Products\"\n    ).then((res) => res.json()),\n  putProducts: (products) => {\n    const fetchOptions = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({ products: products }),\n    };\n    return fetch(\n      \"https://via-fr-database-connector.herokuapp.com/Products\",\n      fetchOptions\n    ).then((res) => res.ok);\n  },\n  deleteProduct: async (id) => {\n    const response = await fetch(\n      \"https://via-fr-database-connector.herokuapp.com/Products/\" + id,\n      { method: \"DELETE\" }\n    );\n    return response.ok;\n  },\n};\n","import React from \"react\";\nimport {\n  TableCell,\n  TableRow,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { ProductAPI } from \"../api/ProductAPI\";\n\nexport const ProductTableRow = ({ product, setProducts }) => {\n  const updateProduct = (product) => {\n    setProducts((previousState) => {\n      const products_copy = [...previousState];\n      const prodIdx = products_copy.findIndex((p) => p.id === product.id);\n      products_copy[prodIdx] = product;\n      return products_copy;\n    });\n  };\n\n  const deleteProduct = async (product) => {\n    if (await ProductAPI.deleteProduct(product.id)) {\n      setProducts((previousState) =>\n        previousState.filter((p) => p.id !== product.id)\n      );\n    }\n  };\n\n  const handleChange = (event) => {\n    updateProduct({ ...product, [event.target.name]: event.target.value });\n  };\n\n  const handleDeleteButton = async () => {\n    await deleteProduct(product);\n  };\n\n  return (\n    <TableRow>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"name\"\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.name ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"price\"\n          variant=\"outlined\"\n          type={\"number\"}\n          onChange={handleChange}\n          size={\"small\"}\n          value={product.price ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"newPrice\"\n          type={\"number\"}\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.newPrice ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"sex\"}\n          value={product.sex ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={\"M\"}>Male</MenuItem>\n          <MenuItem value={\"F\"}>Female</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"age\"}\n          value={product.age ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={17}>17</MenuItem>\n          <MenuItem value={28}>28</MenuItem>\n          <MenuItem value={40}>40</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={80}>80</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell>\n        <Button onClick={handleDeleteButton}>\n          <Delete />\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React from \"react\";\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  TableBody,\n} from \"@material-ui/core\";\nimport { ProductTableRow } from \"./ProductTableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    maxHeight: \"100%\",\n  },\n}));\n\nexport const ProductTable = ({ setProducts, products }) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const shownProducts = products.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table stickyHeader>\n        <TableHead className={classes.tableHead}>\n          <TableRow>\n            <TableCell align=\"left\">Product</TableCell>\n            <TableCell align=\"left\">Price</TableCell>\n            <TableCell align=\"left\">Special Price</TableCell>\n            <TableCell align=\"left\">Target Gender</TableCell>\n            <TableCell align=\"left\">Target Age</TableCell>\n            <TableCell align=\"left\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {shownProducts.map((product) => (\n            <ProductTableRow\n              key={product.id}\n              product={product}\n              setProducts={setProducts}\n            />\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              count={products.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Snackbar, Fab } from \"@material-ui/core\";\nimport { Save, Add } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ProductAPI } from \"../api/ProductAPI\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ProductTable } from \"./ProductTable\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    background: \"#00000022\",\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n  grid: {\n    background: \"#00000022\",\n  },\n  saveButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n\n  addButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(4) + 64,\n    right: theme.spacing(4),\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n\n  const [products, setProducts] = useState([]);\n  const [successIsOpen, successSetOpen] = useState(false);\n  const [failIsOpen, failSetOpen] = useState(false);\n\n  useEffect(() => {\n    ProductAPI.getProducts().then((res) => setProducts(res));\n  }, [setProducts]);\n\n  const handleSaveButton = () => {\n    ProductAPI.putProducts(products).then((ok) => {\n      if (ok) successSetOpen(true);\n      else failSetOpen(true);\n    });\n  };\n\n  const handleAddButton = () => {\n    setProducts([...products, { id: uuidv4() }]);\n  };\n\n  return (\n    <Box className={classes.box}>\n      <ProductTable products={products} setProducts={setProducts} />\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={successIsOpen}\n        autoHideDuration={6000}\n        onClose={() => successSetOpen(false)}\n      >\n        <Alert onClose={() => successSetOpen(false)} severity=\"success\">\n          Successfully Saved!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={failIsOpen}\n        autoHideDuration={6000}\n        onClose={() => failSetOpen(false)}\n      >\n        <Alert onClose={() => failSetOpen(false)} severity=\"error\">\n          Saving failed!\n        </Alert>\n      </Snackbar>\n      <Fab\n        className={classes.addButton}\n        color={\"primary\"}\n        onClick={handleAddButton}\n      >\n        <Add />\n      </Fab>\n      <Fab\n        className={classes.saveButton}\n        color={\"primary\"}\n        onClick={handleSaveButton}\n      >\n        <Save />\n      </Fab>\n    </Box>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}