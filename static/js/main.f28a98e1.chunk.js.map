{"version":3,"sources":["data/products.js","api/ProductAPI.js","components/ProductTableRow.js","components/ProductTable.js","components/App.js","serviceWorker.js","index.js"],"names":["products","id","name","price","specialPrice","targetGender","targetAge","actualProducts","undefined","ProductAPI","newProducts","ProductTableRow","product","setProducts","handleChange","event","previousState","products_copy","prodIdx","findIndex","p","updateProduct","target","value","TableRow","TableCell","align","TextField","variant","size","onChange","type","Select","MenuItem","Button","onClick","filter","deleteProduct","Delete","useStyles","makeStyles","tableContainer","maxHeight","ProductTable","classes","TableContainer","component","Paper","className","Table","stickyHeader","TableHead","tableHead","TableBody","map","key","theme","box","background","height","width","grid","saveButton","position","bottom","spacing","right","addButton","App","useState","open","setOpen","Box","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","Fab","color","uuidv4","Add","Save","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f28a98e1.chunk.js","sourcesContent":["export let products = [\n  {\n    id: 1,\n    name: \"Rug\",\n    price: 29.99,\n    specialPrice: 24.99,\n    targetGender: \"female\",\n    targetAge: 40,\n  },\n  {\n    id: 2,\n    name: \"Cucumber\",\n    price: 1.5,\n    specialPrice: 0.6,\n    targetGender: \"female\",\n  },\n  {\n    id: 3,\n    name: \"Cactus\",\n    price: 300.0,\n    specialPrice: 9.99,\n    targetGender: \"female\",\n    targetAge: 17,\n  },\n  {\n    id: 4,\n    name: \"Bread\",\n    price: 2.0,\n    specialPrice: 1.29,\n  },\n];\n","import { products } from \"../data/products\";\n\nlet actualProducts = undefined;\n\nexport const ProductAPI = {\n  getProducts: () => actualProducts ?? [...products],\n  putProducts: (newProducts) => {\n    actualProducts = newProducts;\n  },\n};\n","import React from \"react\";\nimport {\n  TableCell,\n  TableRow,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\n\nexport const ProductTableRow = ({ product, setProducts }) => {\n  const updateProduct = (product) => {\n    setProducts((previousState) => {\n      const products_copy = [...previousState];\n      const prodIdx = products_copy.findIndex((p) => p.id === product.id);\n      products_copy[prodIdx] = product;\n      return products_copy;\n    });\n  };\n\n  const deleteProduct = (product) => {\n    setProducts((previousState) =>\n      previousState.filter((p) => p.id !== product.id)\n    );\n  };\n\n  const handleChange = (event) => {\n    updateProduct({ ...product, [event.target.name]: event.target.value });\n  };\n\n  const handleDeleteButton = () => {\n    deleteProduct(product);\n  };\n\n  return (\n    <TableRow>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"name\"\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.name ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"price\"\n          variant=\"outlined\"\n          type={\"number\"}\n          onChange={handleChange}\n          size={\"small\"}\n          value={product.price ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <TextField\n          name=\"specialPrice\"\n          type={\"number\"}\n          variant=\"outlined\"\n          size={\"small\"}\n          onChange={handleChange}\n          value={product.specialPrice ?? \"\"}\n        />\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"targetGender\"}\n          value={product.targetGender ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={\"male\"}>Male</MenuItem>\n          <MenuItem value={\"female\"}>Female</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell align=\"left\">\n        <Select\n          name={\"targetAge\"}\n          value={product.targetAge ?? \"none\"}\n          variant={\"outlined\"}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"none\"}>None</MenuItem>\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={17}>17</MenuItem>\n          <MenuItem value={28}>28</MenuItem>\n          <MenuItem value={40}>40</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={80}>80</MenuItem>\n        </Select>\n      </TableCell>\n      <TableCell>\n        <Button onClick={handleDeleteButton}>\n          <Delete />\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React from \"react\";\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport { ProductTableRow } from \"./ProductTableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    maxHeight: \"100%\",\n  },\n}));\n\nexport const ProductTable = ({ setProducts, products }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table stickyHeader>\n        <TableHead className={classes.tableHead}>\n          <TableRow>\n            <TableCell align=\"left\">Product</TableCell>\n            <TableCell align=\"left\">Price</TableCell>\n            <TableCell align=\"left\">Special Price</TableCell>\n            <TableCell align=\"left\">Target Gender</TableCell>\n            <TableCell align=\"left\">Target Age</TableCell>\n            <TableCell align=\"left\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products.map((product) => (\n            <ProductTableRow\n              key={product.id}\n              product={product}\n              setProducts={setProducts}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Box, Snackbar, Fab } from \"@material-ui/core\";\nimport { Save, Add } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ProductAPI } from \"../api/ProductAPI\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ProductTable } from \"./ProductTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    background: \"#00000022\",\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n  grid: {\n    background: \"#00000022\",\n  },\n  saveButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n\n  addButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(2) + 64,\n    right: theme.spacing(2),\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n\n  const [products, setProducts] = useState(ProductAPI.getProducts());\n  const [open, setOpen] = useState(false);\n\n  const handleSaveButton = () => {\n    ProductAPI.putProducts(products);\n    setOpen(true);\n  };\n\n  const handleAddButton = () => {\n    setProducts([...products, { id: uuidv4() }]);\n  };\n\n  return (\n    <Box className={classes.box}>\n      <ProductTable products={products} setProducts={setProducts} />\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={() => setOpen(false)}\n        message={<span>Changes saved!</span>}\n      />\n      <Fab\n        className={classes.addButton}\n        color={\"primary\"}\n        onClick={handleAddButton}\n      >\n        <Add />\n      </Fab>\n      <Fab\n        className={classes.saveButton}\n        color={\"primary\"}\n        onClick={handleSaveButton}\n      >\n        <Save />\n      </Fab>\n    </Box>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}